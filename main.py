from DomainEnumerators.baseDomainEnumerator import BaseDomainEnumerator
from domainsAggregator import DomainsAggregator
from domain import Domain
from Loggers.consoleLogger import ConsoleLogger


class EnumeratorMockup1(BaseDomainEnumerator):

    def find_subdomains(self, domain_name: str) -> []:

        d1 = Domain('iit.' + domain_name)
        d1.add_ip_address('1.1.1.1')

        d2 = Domain('math.' + domain_name)
        d2.add_ip_address('2.2.2.2')

        d3 = Domain('phy.' + domain_name)
        d3.add_ip_address('3.3.3.3')

        return [d1, d2, d3]


class EnumeratorMockup2(BaseDomainEnumerator):

    def find_subdomains(self, domain_name: str) -> []:
        d1 = Domain('iit.' + domain_name)
        d1.add_ip_address('1.1.1.1')

        d2 = Domain('math.' + domain_name)
        d2.add_ip_address('4.4.4.4')

        d3 = Domain('phy.' + domain_name)
        d3.add_ip_address('5.5.5.5')

        d4 = Domain('lang.' + domain_name)
        d4.add_ip_address('5.5.5.5')

        return [d1, d2, d3, d4]


enum1 = EnumeratorMockup1()
enum2 = EnumeratorMockup2()

aggregator = DomainsAggregator()
aggregator.add_logger(ConsoleLogger())
aggregator.aggregate('csu.ru', [enum1, enum2])
